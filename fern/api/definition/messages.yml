# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  templates: templates.yml

services: 
  http:
    MessageService:
      auth: true
      base-path: /messages
      endpoints: 
        send: 
          display-name: Send messages to recipients 
          path: /
          method: POST 
          request: SendMessageRequest
          response: SendMessageResponse
          examples: 
            - request:
                template: user-welcome
                to: bob@test.com
                from: Northwind App <app@northwind.com>
                subject: Welcome to Northwind
                templateVariables: 
                  name: Bob Vance
              response:
                body: 
                  to: bob@test.com
                  from: Northwind App <app@northwind.com>
                  body: <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN"><html ... </html>

types:
  SendMessageRequest:
    properties:
      template: 
        type: string
        docs: The `template` field is required and should be the template slug you wish to send.
      to: 
        type: string
        docs: The `to` field is required to send a message. It should be a single recipient.
      from: 
        type: optional<string>
        docs: | 
          The `from` field is optional on the API call as long as it is set on either the *Template* or the *Provider*.
          The order of precedence for the from field on a message is:
            1. from attribute in the API call
            2. If not set in API call it will look in *Template* defaults
            3. If not set in *Template* it will look in *Provider* defaults
            4. If not set in 1-3 it will return an error and fail to send *Message*
      subject: 
        type: optional<string>
        docs: The `subject` field is optional on the API call as long as it is set in the *Template* defaults.
      templateVariables: 
        type: map<string,string>
        docs: | 
          The `templateVariables` field accepts a hash/object of variables and text to replace in the template.
          For example if you have the text `Hello {{user}}` in your template and pass `{ user: "Bob" }` as `templateVariables` then the template will render `Hello Bob`
  
  SendMessageResponse:
    properties:
      to: 
        type: string
        docs: The recipient of the message
      from: 
        type: string 
        docs: The from address of the message sent
      body: 
        type: string 
        docs: A preview of the body of the message delivered to the recipient
      
      # Recommendation: use errors out-of-the-box from Fern.
      # error: 
      #   type: 
      #   docs: If an error is present you will get a http status of 500 and the error field will contain the error
      